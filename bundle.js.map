{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/const.js","webpack:///./src/utils/render.js","webpack:///./src/view/abstract.js","webpack:///./src/view/user-rank.js","webpack:///./src/view/board.js","webpack:///./src/view/sort.js","webpack:///./src/view/films-list.js","webpack:///./src/view/no-data.js","webpack:///./src/view/extra-container.js","webpack:///./src/view/movie-card.js","webpack:///./src/view/show-more-button.js","webpack:///./src/view/movie-details.js","webpack:///./src/utils/sort.js","webpack:///./src/utils/common.js","webpack:///./src/mock/movie.js","webpack:///./src/mock/filter.js","webpack:///./src/main.js","webpack:///./src/mock/user.js","webpack:///./src/view/site-menu.js","webpack:///./src/presenter/board.js","webpack:///./src/view/footer-stats.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TITLES","POSTERS","SENTENCES","EMOTIONS","AUTHORS","AGE_RATINGS","DIRECTORS","WRITERS","ACTORS","COUNTRIES","GENRES","AVATAR_PATHS","RANKS","MOVIES_AMOUNT","EXTRA_BLOCK_TITLE","TOP_RATED","MOST_COMMENTED","SortType","DEFAULT","DATE","RATING","COMMENTS","RenderPosition","AFTERBEGIN","BEFOREEND","render","container","child","place","getElement","prepend","append","remove","component","Error","removeElement","this","_element","_callback","template","newElement","document","createElement","innerHTML","firstElementChild","getTemplate","createUserRankTemplate","user","moviesViewed","avatar","rank","length","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","getUserRank","super","_sortTypeChangeHandler","evt","querySelectorAll","forEach","button","classList","target","add","tagName","preventDefault","sortTypeChange","dataset","sortType","_changeSortButtonActiveState","callback","addEventListener","querySelector","title","_title","isControlItemActive","item","movie","_movie","_clickHandler","comments","filmInfo","totalRating","poster","runtime","description","release","genres","userDetails","watchlist","favorite","alreadyWatched","date","getFullYear","MAX_DESCRIPTION_LENGTH","checkDescriptionLength","createFilmCardTemplate","click","createGenreItemTemplate","genre","createCommentItemTemplate","commentItem","emoji","author","comment","writers","actors","ageRating","alternativeTitle","director","writersToString","actorsToString","releaseDate","day","getDate","toLocaleString","month","getFormattedReleaseDate","genresItemsTemplate","commentsItemsTemplate","releaseCountry","createFilmDetailsTemplate","sortByDate","filmA","filmB","getTime","sortByRating","sortByComments","getRandomInteger","a","b","lower","Math","ceil","min","upper","floor","max","random","generateDate","maxDaysGap","daysGap","currentDate","Date","setHours","setDate","getMonth","getHours","getMinutes","getRandomElement","array","generateDescription","sentencesAmount","generateComments","commentsAmount","randomComments","push","generateWriters","writersAmount","randomWriters","generateActors","actorsAmount","generateRuntime","filmDuration","hour","trunc","minute","minuteToString","generateGenres","genresAmount","randomGenres","movieToFilterMap","movies","filter","history","favorites","Array","fill","Boolean","watchingDate","filters","entries","filterName","moviesAmount","amount","generateFilter","siteHeaderNode","siteMainNode","footerStatictsNode","_user","_filters","filterTitle","createFilterItemTemplate","createSiteMenuTemplate","boardContainer","_boardContainer","_renderedMoviesCount","_currentSortType","_boardComponent","_sortComponent","_filmsListComponent","_noDataComponent","_showMoreButtonComponent","_handleShowMoreButtonClick","_handleSortTypeChange","boardFilms","_boardFilms","_sourcedBoardFilms","_renderSort","_renderBoard","sort","_sortFilms","_clearFilmsList","_renderFilmsList","setSortTypeChangeHandler","film","filmComponent","filmDetailsComponent","showFilmDetails","parent","appendChild","addChild","removeFilmDetails","parentElement","removeChild","deleteChild","onEscKeyDown","removeEventListener","openDetailsClickHandler","closeDetailsClickHandler","getContainer","from","to","_renderFilm","_renderFilms","setClickHandler","_renderShowMoreButton","extraListComponent","slicedFilms","_renderNoData","_renderExtraList","init","_moviesAmount"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const TITLES = [\n  `Made for Each Other`,\n  `Popeye the Sailor Meets Sinbad the Sailor`,\n  `Sagebrush Trail`,\n  `Santa Claus Conquers the Martians`,\n  `The Dance of Life`,\n  `The Great Flamarion`,\n  `The Man with the Golden Arm`,\n];\n\nexport const POSTERS = [\n  `images/posters/made-for-each-other.png`,\n  `images/posters/popeye-meets-sinbad.png`,\n  `images/posters/sagebrush-trail.jpg`,\n  `images/posters/santa-claus-conquers-the-martians.jpg`,\n  `images/posters/the-dance-of-life.jpg`,\n  `images/posters/the-great-flamarion.jpg`,\n  `images/posters/the-man-with-the-golden-arm.jpg`,\n];\n\nexport const SENTENCES = [\n  `Lorem ipsum dolor sit amet, consectetur adipiscing elit.`,\n  `Cras aliquet varius magna, non porta ligula feugiat eget.`,\n  `Fusce tristique felis at fermentum pharetra.`,\n  `Aliquam id orci ut lectus varius viverra.`,\n  `Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante.`,\n  `Phasellus eros mauris, condimentum sed nibh vitae, sodales efficitur ipsum.`,\n  `Sed blandit, eros vel aliquam faucibus, purus ex euismod diam, eu luctus nunc ante ut dui.`,\n  `Sed sed nisi sed augue convallis suscipit in sed felis.`,\n  `Aliquam erat volutpat.`,\n  `Nunc fermentum tortor ac porta dapibus.`,\n  `In rutrum ac purus sit amet tempus.`,\n];\n\nexport const EMOTIONS = [`smile`, `sleeping`, `puke`, `angry`];\n\nexport const AUTHORS = [`Max Kolesnik`, `Vladislav Matyash`, `Nazar Mirniy`, `Sergey Soroka`, `Omar Habuniia`];\n\nexport const AGE_RATINGS = [`6+`, `12+`, `16+`, `18+`];\n\nexport const DIRECTORS = [\n  `John Cromwell`,\n  `Dave Fleischer`,\n  `Armand Schaefer`,\n  `Nicholas Webster`,\n  `A. Edward Sutherland`,\n  `Anthony Mann`,\n  `Otto Preminger`,\n];\n\nexport const WRITERS = [\n  `Rose Franken`,\n  `Max Fleischer`,\n  `Lindsley Parsons`,\n  `Glenville Mareth`,\n  `Benjamin Glazer`,\n  `Heinz Herald`,\n  `Richard Weil`,\n  `Anne Wigton`,\n  `Walter Newman`,\n  `Lewis Meltzer`,\n];\n\nexport const ACTORS = [\n  `Carole Lombard`,\n  `James Stewart`,\n  `Jack Mercer`,\n  `Mae Questel`,\n  `Gus Wickie`,\n  `John Wayne`,\n  `Nancy Shubert`,\n  `Lane Chandler`,\n  `John Call`,\n  `Leonard Hicks`,\n  `Vincent Beck`,\n  `Hal Skelly`,\n  `Nancy Carroll`,\n  `Erich von Stroheim`,\n  `Mary Beth Hughes`,\n  `Frank Sinatra`,\n  `Eleanor Parker`,\n  `Kim Novak`,\n];\n\nexport const COUNTRIES = [\n  `Russia`,\n  `USA`,\n  `India`,\n  `China`,\n  `UK`,\n  `Italia`,\n];\n\nexport const GENRES = [\n  `Drama`,\n  `Thriller`,\n  `Western`,\n  `Fantasy`,\n  `Comedy`,\n];\n\nexport const AVATAR_PATHS = [\n  `images/bitmap.png`,\n  `images/emoji/angry.png`,\n  `images/emoji/puke.png`,\n  `images/emoji/sleeping.png`,\n  `images/emoji/smile.png`,\n];\n\nexport const RANKS = [`novice`, `fan`, `movie buff`];\n\nexport const MOVIES_AMOUNT = {\n  TOTAL: 20,\n  PER_STEP: 5,\n  TOP_RATED: 2,\n  MOST_COMMENTED: 2,\n};\n\nexport const EXTRA_BLOCK_TITLE = {\n  TOP_RATED: `Top rated`,\n  MOST_COMMENTED: `Most commented`\n};\n\nexport const SortType = {\n  DEFAULT: `default`,\n  DATE: `date`,\n  RATING: `rating`,\n  COMMENTS: `comments`,\n};\n","import Abstract from '../view/abstract';\n\nexport const RenderPosition = {\n  AFTERBEGIN: `afterbegin`,\n  BEFOREEND: `beforeend`,\n};\n\nexport const render = (container, child, place = RenderPosition.BEFOREEND) => {\n  if (container instanceof Abstract) {\n    container = container.getElement();\n  }\n\n  if (child instanceof Abstract) {\n    child = child.getElement();\n  }\n\n  switch (place) {\n    case RenderPosition.AFTERBEGIN:\n      container.prepend(child);\n      break;\n    case RenderPosition.BEFOREEND:\n      container.append(child);\n      break;\n  }\n};\n\nexport const renderTemplate = (container, template, place = RenderPosition.BEFOREEND) => {\n  if (container instanceof Abstract) {\n    container = container.getElement();\n  }\n\n  container.insertAdjacentHTML(place, template);\n};\n\nexport const createElement = (template) => {\n  const newElement = document.createElement(`div`);\n  newElement.innerHTML = template;\n\n  return newElement.firstElementChild;\n};\n\nexport const addChild = (parent, child) => {\n  if (parent instanceof Abstract) {\n    parent = parent.getElement();\n  }\n\n  if (child instanceof Abstract) {\n    child = child.getElement();\n  }\n\n  if (!parent || !child) {\n    throw new Error(`Can't add child.`);\n  }\n\n  parent.appendChild(child);\n};\n\nexport const deleteChild = (child) => {\n  if (child instanceof Abstract) {\n    child = child.getElement();\n  }\n\n  const parent = child.parentElement;\n\n  if (!parent || !child) {\n    throw new Error(`Can't remove child.`);\n  }\n\n  parent.removeChild(child);\n};\n\nexport const remove = (component) => {\n  if (!(component instanceof Abstract)) {\n    throw new Error(`Can remove only components`);\n  }\n\n  component.getElement().remove();\n  component.removeElement();\n};\n","import {createElement} from '../utils/render';\n\nexport default class Abstract {\n  constructor() {\n    if (new.target === Abstract) {\n      throw new Error(`Can't instantiate Abstarct, only concrete one.`);\n    }\n\n    this._element = null;\n    this._callback = {};\n  }\n\n  getTemplate() {\n    throw new Error(`Abstract method not implemented: getTemplate`);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {RANKS} from '../const';\nimport AbstarctView from './abstract';\n\n// Функция получения звания пользователя\nconst getUserRank = (moviesViewed) => {\n  let rank = ``;\n\n  if (moviesViewed >= 1 && moviesViewed <= 10) {\n    rank = RANKS[0];\n  } else if (moviesViewed >= 11 && moviesViewed <= 20) {\n    rank = RANKS[1];\n  } else if (moviesViewed > 20) {\n    rank = RANKS[2];\n  }\n\n  if (rank.length > 0) {\n    rank = rank\n      .toLowerCase()\n      .split(` `)\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(` `);\n  }\n\n  return rank;\n};\n\n// Фунция создания шаблона звания пользователя\nconst createUserRankTemplate = (user) => {\n  const {moviesViewed, avatar} = user;\n  const userRank = getUserRank(moviesViewed);\n\n  return (\n    `<section class=\"header__profile profile\">\n      <p class=\"profile__rating\">${userRank}</p>\n      <img class=\"profile__avatar\" src=\"${avatar}\" alt=\"Avatar\" width=\"35\" height=\"35\">\n    </section>`\n  );\n};\n\nexport default class UserRank extends AbstarctView {\n  constructor(user) {\n    super();\n\n    this._user = user;\n  }\n\n  getTemplate() {\n    return createUserRankTemplate(this._user);\n  }\n}\n","import AbstarctView from './abstract';\n\nconst createBoardTemplate = () => {\n  return (\n    `<section class=\"films\"></section>`\n  );\n};\n\nexport default class Board extends AbstarctView {\n  getTemplate() {\n    return createBoardTemplate();\n  }\n}\n","import AbstarctView from './abstract';\nimport {SortType} from '../const';\n\nconst createSortTemplate = () => {\n  return (\n    `<ul class=\"sort\">\n      <li><a href=\"#\" class=\"sort__button sort__button--active\" data-sort-type=\"${SortType.DEFAULT}\">Sort by default</a></li>\n      <li><a href=\"#\" class=\"sort__button\" data-sort-type=\"${SortType.DATE}\">Sort by date</a></li>\n      <li><a href=\"#\" class=\"sort__button\" data-sort-type=\"${SortType.RATING}\">Sort by rating</a></li>\n    </ul>`\n  );\n};\n\nexport default class Sort extends AbstarctView {\n  constructor() {\n    super();\n\n    this._sortTypeChangeHandler = this._sortTypeChangeHandler.bind(this);\n  }\n\n  getTemplate() {\n    return createSortTemplate();\n  }\n\n  _changeSortButtonActiveState(evt) {\n    this.getElement().querySelectorAll(`.sort__button`)\n      .forEach((button) => button.classList.remove(`sort__button--active`));\n    evt.target.classList.add(`sort__button--active`);\n  }\n\n  _sortTypeChangeHandler(evt) {\n    if (evt.target.tagName !== `A`) {\n      return;\n    }\n\n    evt.preventDefault();\n    this._callback.sortTypeChange(evt.target.dataset.sortType);\n    this._changeSortButtonActiveState(evt);\n  }\n\n  setSortTypeChangeHandler(callback) {\n    this._callback.sortTypeChange = callback;\n    this.getElement().addEventListener(`click`, this._sortTypeChangeHandler);\n  }\n}\n","import AbstarctView from './abstract';\n\nconst createFilmsListTemplate = () => {\n  return (\n    `<section class=\"films-list\">\n      <h2 class=\"films-list__title visually-hidden\">All movies. Upcoming</h2>\n      <div class=\"films-list__container\"></div>\n    </section>`\n  );\n};\n\nexport default class FilmsList extends AbstarctView {\n  getTemplate() {\n    return createFilmsListTemplate();\n  }\n\n  getContainer() {\n    return this.getElement().querySelector(`.films-list__container`);\n  }\n}\n","import AbstarctView from './abstract';\n\nconst createNoDataTemplate = () => {\n  return (\n    `<section class=\"films-list\">\n      <h2 class=\"films-list__title\">There are no movies in our database</h2>\n    </section>`\n  );\n};\n\nexport default class NoData extends AbstarctView {\n  getTemplate() {\n    return createNoDataTemplate();\n  }\n}\n","import AbstarctView from './abstract';\n\nconst createExtraFilmContainerTemplate = (heading) => {\n  return (\n    `<section class=\"films-list--extra\">\n      <h2 class=\"films-list__title\">${heading}</h2>\n      <div class=\"films-list__container\"></div>\n    </section>`\n  );\n};\n\nexport default class ExtraContainer extends AbstarctView {\n  constructor(title) {\n    super();\n\n    this._title = title;\n  }\n\n  getTemplate() {\n    return createExtraFilmContainerTemplate(this._title);\n  }\n\n  getContainer() {\n    return this.getElement().querySelector(`.films-list__container`);\n  }\n}\n","import AbstarctView from './abstract';\n\nconst checkDescriptionLength = (description) => {\n  const MAX_DESCRIPTION_LENGTH = 140;\n\n  if (description.length > MAX_DESCRIPTION_LENGTH) {\n    return description.slice(0, MAX_DESCRIPTION_LENGTH - 1) + `...`;\n  }\n\n  return description;\n};\n\nconst isControlItemActive = (item) => item ? `film-card__controls-item--active` : ``;\n\nconst createFilmCardTemplate = (movie) => {\n  const {comments} = movie;\n  const {filmInfo: {title, totalRating, poster, runtime, description, release, genres}} = movie;\n  const {userDetails: {watchlist, favorite, alreadyWatched}} = movie;\n\n  const releaseYear = release.date.getFullYear();\n\n  return (\n    `<article class=\"film-card\">\n      <h3 class=\"film-card__title\">${title}</h3>\n      <p class=\"film-card__rating\">${totalRating}</p>\n      <p class=\"film-card__info\">\n        <span class=\"film-card__year\">${releaseYear}</span>\n        <span class=\"film-card__duration\">${runtime}</span>\n        <span class=\"film-card__genre\">${genres[0]}</span>\n      </p>\n      <img src=\"${poster}\" alt=\"${title}\" class=\"film-card__poster\">\n      <p class=\"film-card__description\">${checkDescriptionLength(description)}</p>\n      <a class=\"film-card__comments\">${comments.length} comments</a>\n      <form class=\"film-card__controls\">\n        <button class=\"film-card__controls-item button film-card__controls-item--add-to-watchlist ${isControlItemActive(watchlist)}\">Add to watchlist</button>\n        <button class=\"film-card__controls-item button film-card__controls-item--mark-as-watched ${isControlItemActive(alreadyWatched)}\">Mark as watched</button>\n        <button class=\"film-card__controls-item button film-card__controls-item--favorite ${isControlItemActive(favorite)}\">Mark as favorite</button>\n      </form>\n    </article>`\n  );\n};\n\nexport default class FilmCard extends AbstarctView {\n  constructor(movie) {\n    super();\n\n    this._movie = movie;\n    this._clickHandler = this._clickHandler.bind(this);\n  }\n\n  getTemplate() {\n    return createFilmCardTemplate(this._movie);\n  }\n\n  _clickHandler(evt) {\n    evt.preventDefault();\n    this._callback.click();\n  }\n\n  openDetailsClickHandler(callback) {\n    this._callback.click = callback;\n    this.getElement().querySelectorAll(`.film-card__poster, .film-card__title, .film-card__comments`)\n      .forEach((item) => item.addEventListener(`click`, this._clickHandler));\n  }\n}\n","import AbstarctView from './abstract';\n\nconst createShowMoreButtonTemplate = () => {\n  return (\n    `<button class=\"films-list__show-more\">Show more</button>`\n  );\n};\n\nexport default class ShowMoreButton extends AbstarctView {\n  constructor() {\n    super();\n\n    this._clickHandler = this._clickHandler.bind(this);\n  }\n\n  getTemplate() {\n    return createShowMoreButtonTemplate();\n  }\n\n  _clickHandler(evt) {\n    evt.preventDefault();\n    this._callback.click();\n  }\n\n  setClickHandler(callback) {\n    this._callback.click = callback;\n    this.getElement().addEventListener(`click`, this._clickHandler);\n  }\n}\n","import AbstarctView from './abstract';\n\nconst getFormattedReleaseDate = (date) => {\n  let day = date.getDate();\n  if (day < 10) {\n    day = `0` + day;\n  }\n\n  const month = date.toLocaleString(`en-US`, {month: `long`});\n  const year = date.getFullYear();\n\n  return `${day} ${month} ${year}`;\n};\n\nconst createGenreItemTemplate = (genre) => {\n  return `<span class=\"film-details__genre\">${genre}</span>`;\n};\n\nconst createCommentItemTemplate = (commentItem) => {\n  const {emoji, date, author, comment} = commentItem;\n\n  const emojiPath = `images/emoji/${emoji}.png`;\n\n  return (\n    `<li class=\"film-details__comment\">\n      <span class=\"film-details__comment-emoji\">\n        <img src=\"${emojiPath}\" width=\"55\" height=\"55\" alt=\"emoji-${emoji}\">\n      </span>\n      <div>\n        <p class=\"film-details__comment-text\">${comment}</p>\n        <p class=\"film-details__comment-info\">\n          <span class=\"film-details__comment-author\">${author}</span>\n          <span class=\"film-details__comment-day\">${date}</span>\n          <button class=\"film-details__comment-delete\">Delete</button>\n        </p>\n      </div>\n    </li>`\n  );\n};\n\nconst createFilmDetailsTemplate = (movie) => {\n  const {comments} = movie;\n  const {filmInfo: {title, totalRating, poster, runtime, description, release, genres, writers, actors, ageRating, alternativeTitle, director}} = movie;\n  const {userDetails: {watchlist, favorite, alreadyWatched}} = movie;\n\n  const writersToString = writers.join(`, `);\n  const actorsToString = actors.join(`, `);\n  const releaseDate = getFormattedReleaseDate(release.date);\n  const genresItemsTemplate = genres\n    .map(createGenreItemTemplate)\n    .join(``);\n  const commentsItemsTemplate = comments\n    .map(createCommentItemTemplate)\n    .join(``);\n\n  return (\n    `<section class=\"film-details\">\n      <form class=\"film-details__inner\" action=\"\" method=\"get\">\n        <div class=\"form-details__top-container\">\n          <div class=\"film-details__close\">\n            <button class=\"film-details__close-btn\" type=\"button\">close</button>\n          </div>\n          <div class=\"film-details__info-wrap\">\n            <div class=\"film-details__poster\">\n              <img class=\"film-details__poster-img\" src=\"${poster}\" alt=\"${title}\">\n\n              <p class=\"film-details__age\">${ageRating}</p>\n            </div>\n\n            <div class=\"film-details__info\">\n              <div class=\"film-details__info-head\">\n                <div class=\"film-details__title-wrap\">\n                  <h3 class=\"film-details__title\">${title}</h3>\n                  <p class=\"film-details__title-original\">Original: ${alternativeTitle}</p>\n                </div>\n\n                <div class=\"film-details__rating\">\n                  <p class=\"film-details__total-rating\">${totalRating}</p>\n                </div>\n              </div>\n\n              <table class=\"film-details__table\">\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Director</td>\n                  <td class=\"film-details__cell\">${director}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Writers</td>\n                  <td class=\"film-details__cell\">${writersToString}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Actors</td>\n                  <td class=\"film-details__cell\">${actorsToString}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Release Date</td>\n                  <td class=\"film-details__cell\">${releaseDate}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Runtime</td>\n                  <td class=\"film-details__cell\">${runtime}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Country</td>\n                  <td class=\"film-details__cell\">${release.releaseCountry}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">${genres.length > 1 ? `Genres` : `Genre`}</td>\n                  <td class=\"film-details__cell\">\n                    ${genresItemsTemplate}\n                  </td>\n                </tr>\n              </table>\n\n              <p class=\"film-details__film-description\">\n                ${description}\n              </p>\n            </div>\n          </div>\n\n          <section class=\"film-details__controls\">\n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"watchlist\" name=\"watchlist\" ${watchlist ? `checked` : ``}>\n            <label for=\"watchlist\" class=\"film-details__control-label film-details__control-label--watchlist\">\n              Add to watchlist\n            </label>\n\n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"watched\" name=\"watched\" ${alreadyWatched ? `checked` : ``}>\n            <label for=\"watched\" class=\"film-details__control-label film-details__control-label--watched\">\n              Already watched\n            </label>\n\n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"favorite\" name=\"favorite\" ${favorite ? `checked` : ``}>\n            <label for=\"favorite\" class=\"film-details__control-label film-details__control-label--favorite\">\n              Add to favorites\n            </label>\n          </section>\n        </div>\n\n        <div class=\"form-details__bottom-container\">\n          <section class=\"film-details__comments-wrap\">\n            <h3 class=\"film-details__comments-title\">Comments <span class=\"film-details__comments-count\">${comments.length}</span></h3>\n\n            <ul class=\"film-details__comments-list\">\n              ${commentsItemsTemplate}\n            </ul>\n\n            <div class=\"film-details__new-comment\">\n              <div for=\"add-emoji\" class=\"film-details__add-emoji-label\"></div>\n\n              <label class=\"film-details__comment-label\">\n                <textarea class=\"film-details__comment-input\" placeholder=\"Select reaction below and write comment here\" name=\"comment\"></textarea>\n              </label>\n\n              <div class=\"film-details__emoji-list\">\n                <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-smile\" value=\"smile\">\n                <label class=\"film-details__emoji-label\" for=\"emoji-smile\">\n                  <img src=\"./images/emoji/smile.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                </label>\n\n                <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-sleeping\" value=\"sleeping\">\n                <label class=\"film-details__emoji-label\" for=\"emoji-sleeping\">\n                  <img src=\"./images/emoji/sleeping.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                </label>\n\n                <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-puke\" value=\"puke\">\n                <label class=\"film-details__emoji-label\" for=\"emoji-puke\">\n                  <img src=\"./images/emoji/puke.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                </label>\n\n                <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-angry\" value=\"angry\">\n                <label class=\"film-details__emoji-label\" for=\"emoji-angry\">\n                  <img src=\"./images/emoji/angry.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                </label>\n              </div>\n            </div>\n          </section>\n        </div>\n      </form>\n    </section>`\n  );\n};\n\nexport default class FilmDetails extends AbstarctView {\n  constructor(movie) {\n    super();\n\n    this._movie = movie;\n    this._clickHandler = this._clickHandler.bind(this);\n  }\n\n  getTemplate() {\n    return createFilmDetailsTemplate(this._movie);\n  }\n\n  _clickHandler(evt) {\n    evt.preventDefault();\n    this._callback.click();\n  }\n\n  closeDetailsClickHandler(callback) {\n    this._callback.click = callback;\n    this.getElement().querySelector(`.film-details__close-btn`).addEventListener(`click`, this._clickHandler);\n  }\n}\n","export const sortByDate = (filmA, filmB) => {\n  return filmA.filmInfo.release.date.getTime() - filmB.filmInfo.release.date.getTime();\n};\n\nexport const sortByRating = (filmA, filmB) => {\n  return filmB.filmInfo.totalRating - filmA.filmInfo.totalRating;\n};\n\nexport const sortByComments = (filmA, filmB) => {\n  return filmB.comments.length - filmA.comments.length;\n};\n","export const getRandomInteger = (a = 0, b = 1) => {\n  const lower = Math.ceil(Math.min(a, b));\n  const upper = Math.floor(Math.max(a, b));\n\n  return Math.floor(lower + Math.random() * (upper - lower + 1));\n};\n\nexport const generateDate = () => {\n  const maxDaysGap = getRandomInteger(0, 365);\n  const daysGap = getRandomInteger(-maxDaysGap, maxDaysGap);\n  let currentDate = new Date();\n\n  currentDate.setHours(23, 59, 59, 999);\n  currentDate.setDate(currentDate.getDate() + daysGap);\n  currentDate = new Date(currentDate);\n\n  return `${currentDate.getFullYear()}/${currentDate.getMonth()}/${currentDate.getDate()} ${currentDate.getHours()}:${currentDate.getMinutes()}`;\n};\n\nexport const getRandomElement = (array) => {\n  const randomIndex = getRandomInteger(0, array.length - 1);\n  return array[randomIndex];\n};\n","import {TITLES, POSTERS, SENTENCES, EMOTIONS, AUTHORS, AGE_RATINGS, DIRECTORS, WRITERS, ACTORS, COUNTRIES, GENRES} from '../const';\nimport {getRandomInteger, generateDate, getRandomElement} from '../utils/common';\n\n// Функция генерации описания фильма случайным образом\nconst generateDescription = () => {\n  const MIN_DESCRIPTION_SENTENCES = 1;\n  const MAX_DESCRIPTION_SENTENCES = 5;\n\n  const sentencesAmount = getRandomInteger(MIN_DESCRIPTION_SENTENCES, MAX_DESCRIPTION_SENTENCES);\n  let description = ``;\n\n  for (let i = 0; i < sentencesAmount; i++) {\n    description += getRandomElement(SENTENCES);\n  }\n\n  return description;\n};\n\n// Функция генерации комментариев к фильми случайным образом\nconst generateComments = () => {\n  const MIN_COMMENTS_AMOUNT = 0;\n  const MAX_COMMENTS_AMOUNT = 5;\n\n  const commentsAmount = getRandomInteger(MIN_COMMENTS_AMOUNT, MAX_COMMENTS_AMOUNT);\n  const randomComments = [];\n\n  for (let i = 0; i < commentsAmount; i++) {\n    const emoji = getRandomElement(EMOTIONS);\n    const date = generateDate();\n    const author = getRandomElement(AUTHORS);\n    const comment = getRandomElement(SENTENCES);\n\n    const commentItem = {emoji, date, author, comment};\n    randomComments.push(commentItem);\n  }\n\n  return randomComments;\n};\n\n// Функция генерации рейтинга фильма случайным образом\nconst generateRating = () => getRandomInteger(10, 100) / 10;\n\n// Функция генерации сценаристов фильма случайным образом\nconst generateWriters = () => {\n  const MIN_WRITERS_AMOUNT = 1;\n  const MAX_WRITERS_AMOUNT = 4;\n\n  const writersAmount = getRandomInteger(MIN_WRITERS_AMOUNT, MAX_WRITERS_AMOUNT);\n  const randomWriters = [];\n\n  for (let i = 0; i < writersAmount; i++) {\n    randomWriters.push(getRandomElement(WRITERS));\n  }\n\n  return randomWriters;\n};\n\n// Функция генерации актеров фильма случайным образом\nconst generateActors = () => {\n  const MIN_ACTORS_AMOUNT = 1;\n  const MAX_ACTORS_AMOUNT = 4;\n\n  const actorsAmount = getRandomInteger(MIN_ACTORS_AMOUNT, MAX_ACTORS_AMOUNT);\n  const actors = [];\n\n  for (let i = 0; i < actorsAmount; i++) {\n    actors.push(getRandomElement(ACTORS));\n  }\n\n  return actors;\n};\n\n// Функция генерации обьекта релиза фильма случайным образом\nconst generateRelease = () => {\n  return {\n    date: new Date(getRandomInteger(1895, 2020), getRandomInteger(1, 12), getRandomInteger(1, 30)),\n    releaseCountry: getRandomElement(COUNTRIES),\n  };\n};\n\n// Функция генерации продолжительности фильма случайным образом\nconst generateRuntime = () => {\n  const MIN_FILM_DURATION = 10;\n  const MAX_FILM_DURATION = 200;\n\n  const filmDuration = getRandomInteger(MIN_FILM_DURATION, MAX_FILM_DURATION);\n\n  const hour = Math.trunc(filmDuration / 60);\n  const minute = Math.ceil(filmDuration / 60 % 1 * 60);\n\n  const hourToString = (hour > 0) ? `${hour}h` : ``;\n  const minuteToString = (minute > 0) ? `${minute}m` : ``;\n\n  const result = (hour === 0) ? `${minuteToString}` : `${hourToString} ${minuteToString}`;\n  return result;\n};\n\n// Функция генерации жанров фильма случайным образом\nconst generateGenres = () => {\n  const MIN_GENRES_AMOUNT = 1;\n  const MAX_GENRES_AMOUNT = 4;\n\n  const genresAmount = getRandomInteger(MIN_GENRES_AMOUNT, MAX_GENRES_AMOUNT);\n  const randomGenres = [];\n\n  for (let i = 0; i < genresAmount; i++) {\n    randomGenres.push(getRandomElement(GENRES));\n  }\n\n  return randomGenres;\n};\n\n// Функция-генератор карточки фильма\nexport const generateMovie = () => {\n  return {\n    comments: generateComments(),\n    filmInfo: {\n      title: getRandomElement(TITLES),\n      alternativeTitle: getRandomElement(TITLES),\n      poster: getRandomElement(POSTERS),\n      description: generateDescription(),\n      totalRating: generateRating(),\n      ageRating: getRandomElement(AGE_RATINGS),\n      director: getRandomElement(DIRECTORS),\n      writers: generateWriters(),\n      actors: generateActors(),\n      release: generateRelease(),\n      runtime: generateRuntime(),\n      genres: generateGenres(),\n    },\n    userDetails: {\n      watchlist: Boolean(getRandomInteger(0, 1)),\n      favorite: Boolean(getRandomInteger(0, 1)),\n      alreadyWatched: Boolean(getRandomInteger(0, 1)),\n      watchingDate: generateDate(),\n    }\n  };\n};\n","// Мапа где ключи - названия фильтров, а значения - функции-счетчики\nconst movieToFilterMap = {\n  watchlist: (movies) => movies.filter((movie) => movie.userDetails.watchlist).length,\n  history: (movies) => movies.filter((movie) => movie.userDetails.alreadyWatched).length,\n  favorites: (movies) => movies.filter((movie) => movie.userDetails.favorite).length,\n};\n\n// Функция-генератор фильтров\nexport const generateFilter = (movies) => {\n  return Object.entries(movieToFilterMap).map(([filterName, moviesAmount]) => {\n    return {\n      title: filterName,\n      amount: moviesAmount(movies),\n    };\n  });\n};\n","// Подключаем необходимые компоненты\nimport UserRankView from './view/user-rank';\nimport SiteMenuView from './view/site-menu';\nimport FooterStatsView from './view/footer-stats';\nimport BoardPresenter from './presenter/board';\nimport {generateMovie} from './mock/movie';\nimport {generateFilter} from './mock/filter';\nimport {generateUser} from './mock/user';\nimport {RenderPosition, render} from './utils/render';\nimport {MOVIES_AMOUNT} from './const';\n\n// Генерируем необходимые данные для заполнения\nconst movies = new Array(MOVIES_AMOUNT.TOTAL).fill().map(generateMovie);\nconst filters = generateFilter(movies);\nconst user = generateUser();\n\nconst siteHeaderNode = document.querySelector(`.header`);\nconst siteMainNode = document.querySelector(`.main`);\nconst footerStatictsNode = document.querySelector(`.footer__statistics`);\n\nrender(siteHeaderNode, new UserRankView(user));\nrender(siteMainNode, new SiteMenuView(filters), RenderPosition.AFTERBEGIN);\n\nconst boardPresenter = new BoardPresenter(siteMainNode);\nboardPresenter.init(movies);\n\nrender(footerStatictsNode, new FooterStatsView(movies.length));\n","import {getRandomInteger, getRandomElement} from '../utils/common';\nimport {AVATAR_PATHS} from '../const';\n\nexport const generateUser = () => {\n  const MIN_VIEWED_MOVIES = 0;\n  const MAX_VIEWED_MOVIES = 50;\n\n  return {\n    moviesViewed: getRandomInteger(MIN_VIEWED_MOVIES, MAX_VIEWED_MOVIES),\n    avatar: getRandomElement(AVATAR_PATHS),\n  };\n};\n","import AbstarctView from './abstract';\n\nconst createFilterItemTemplate = (filter) => {\n  const {title, amount} = filter;\n  const filterTitle = title[0].toUpperCase() + title.slice(1, title.length);\n\n  return (\n    `<a href=\"#${title}\" class=\"main-navigation__item\">\n      ${filterTitle} <span class=\"main-navigation__item-count\">${amount}</span>\n    </a>`\n  );\n};\n\nconst createSiteMenuTemplate = (filters) => {\n  const filterItemsTemplate = filters\n    .map((filter) => createFilterItemTemplate(filter))\n    .join(``);\n\n  return (\n    `<nav class=\"main-navigation\">\n      <div class=\"main-navigation__items\">\n        <a href=\"#all\" class=\"main-navigation__item main-navigation__item--active\">All movies</a>\n        ${filterItemsTemplate}\n      </div>\n      <a href=\"#stats\" class=\"main-navigation__additional\">Stats</a>\n    </nav>`\n  );\n};\n\nexport default class SiteMenu extends AbstarctView {\n  constructor(filters) {\n    super();\n\n    this._filters = filters;\n  }\n\n  getTemplate() {\n    return createSiteMenuTemplate(this._filters);\n  }\n}\n","import BoardView from '../view/board';\nimport SortView from '../view/sort';\nimport FilmsListView from '../view/films-list';\nimport NoDataView from '../view/no-data';\nimport ExtraContainerView from '../view/extra-container';\nimport FilmCardView from '../view/movie-card';\nimport ShowMoreButtonView from '../view/show-more-button';\nimport FilmDetailsView from '../view/movie-details';\nimport {RenderPosition, render, remove, addChild, deleteChild} from '../utils/render';\nimport {sortByDate, sortByRating, sortByComments} from '../utils/sort';\nimport {MOVIES_AMOUNT, SortType, EXTRA_BLOCK_TITLE} from '../const';\n\nexport default class Board {\n  constructor(boardContainer) {\n    this._boardContainer = boardContainer;\n    this._renderedMoviesCount = MOVIES_AMOUNT.PER_STEP;\n    this._currentSortType = SortType.DEFAULT;\n\n    this._boardComponent = new BoardView();\n    this._sortComponent = new SortView();\n    this._filmsListComponent = new FilmsListView();\n    this._noDataComponent = new NoDataView();\n    this._showMoreButtonComponent = new ShowMoreButtonView();\n\n    this._handleShowMoreButtonClick = this._handleShowMoreButtonClick.bind(this);\n    this._handleSortTypeChange = this._handleSortTypeChange.bind(this);\n  }\n\n  init(boardFilms) {\n    this._boardFilms = boardFilms.slice();\n    this._sourcedBoardFilms = boardFilms.slice();\n\n    this._renderSort();\n    this._renderBoard();\n  }\n\n  _sortFilms(sortType) {\n    switch (sortType) {\n      case SortType.DATE:\n        this._boardFilms.sort(sortByDate);\n        break;\n      case SortType.RATING:\n        this._boardFilms.sort(sortByRating);\n        break;\n      case SortType.COMMENTS:\n        this._boardFilms.sort(sortByComments);\n        break;\n      default:\n        this._boardFilms = this._sourcedBoardFilms.slice();\n    }\n\n    this._currentSortType = sortType;\n  }\n\n  _handleSortTypeChange(sortType) {\n    if (this._currentSortType === sortType) {\n      return;\n    }\n\n    this._sortFilms(sortType);\n    this._clearFilmsList();\n    this._renderFilmsList();\n  }\n\n  _renderSort() {\n    render(this._boardContainer, this._sortComponent);\n    this._sortComponent.setSortTypeChangeHandler(this._handleSortTypeChange);\n  }\n\n  _renderFilm(container, film) {\n    const filmComponent = new FilmCardView(film);\n    const filmDetailsComponent = new FilmDetailsView(film);\n\n    const showFilmDetails = () => {\n      addChild(this._boardContainer, filmDetailsComponent);\n    };\n\n    const removeFilmDetails = () => {\n      deleteChild(filmDetailsComponent);\n    };\n\n    const onEscKeyDown = (evt) => {\n      if (evt.key === `Escape` || evt.key === `Esc`) {\n        evt.preventDefault();\n        removeFilmDetails();\n        document.removeEventListener(`keydown`, onEscKeyDown);\n      }\n    };\n\n    filmComponent.openDetailsClickHandler(() => {\n      showFilmDetails();\n      document.addEventListener(`keydown`, onEscKeyDown);\n    });\n\n    filmDetailsComponent.closeDetailsClickHandler(() => {\n      removeFilmDetails();\n      document.removeEventListener(`keydown`, onEscKeyDown);\n    });\n\n    render(container.getContainer(), filmComponent);\n  }\n\n  _renderFilms(from, to) {\n    this._boardFilms\n      .slice(from, to)\n      .forEach((film) => this._renderFilm(this._filmsListComponent, film));\n  }\n\n  _renderNoData() {\n    render(this._boardComponent, this._noDataComponent);\n  }\n\n  _handleShowMoreButtonClick() {\n    this._renderFilms(this._renderedMoviesCount, this._renderedMoviesCount + MOVIES_AMOUNT.PER_STEP);\n\n    this._renderedMoviesCount += MOVIES_AMOUNT.PER_STEP;\n\n    if (this._renderedMoviesCount >= this._boardFilms.length) {\n      remove(this._showMoreButtonComponent);\n    }\n  }\n\n  _renderShowMoreButton() {\n    render(this._filmsListComponent, this._showMoreButtonComponent);\n    this._showMoreButtonComponent.setClickHandler(this._handleShowMoreButtonClick);\n  }\n\n  _clearFilmsList() {\n    remove(this._filmsListComponent);\n    this._renderedMoviesCount = MOVIES_AMOUNT.PER_STEP;\n  }\n\n  _renderFilmsList() {\n    render(this._boardComponent, this._filmsListComponent, RenderPosition.AFTERBEGIN);\n    this._renderFilms(0, Math.min(this._boardFilms.length, MOVIES_AMOUNT.PER_STEP));\n\n    if (this._boardFilms.length > MOVIES_AMOUNT.PER_STEP) {\n      this._renderShowMoreButton();\n    }\n  }\n\n  _renderExtraList(title) {\n    const extraListComponent = new ExtraContainerView(title);\n\n    render(this._boardComponent, extraListComponent);\n\n    const slicedFilms = this._boardFilms.slice();\n\n    switch (title) {\n      case EXTRA_BLOCK_TITLE.TOP_RATED:\n        slicedFilms\n          .sort(sortByRating)\n          .slice(0, MOVIES_AMOUNT.TOP_RATED)\n          .forEach((film) => this._renderFilm(extraListComponent, film));\n        break;\n      case EXTRA_BLOCK_TITLE.MOST_COMMENTED:\n        slicedFilms\n          .sort(sortByComments)\n          .slice(0, MOVIES_AMOUNT.MOST_COMMENTED)\n          .forEach((film) => this._renderFilm(extraListComponent, film));\n        break;\n    }\n  }\n\n  _renderBoard() {\n    render(this._boardContainer, this._boardComponent);\n\n    if (this._boardFilms.length === 0) {\n      this._renderNoData();\n    }\n\n    this._renderFilmsList();\n    this._renderExtraList(EXTRA_BLOCK_TITLE.TOP_RATED);\n    this._renderExtraList(EXTRA_BLOCK_TITLE.MOST_COMMENTED);\n  }\n}\n","import AbstarctView from './abstract';\n\nconst createFooterStatsTemplate = (moviesAmount) => {\n  return (\n    `<section class=\"footer__statistics\">\n      <p>${moviesAmount} movies inside</p>\n    </section>`\n  );\n};\n\nexport default class FooterStats extends AbstarctView {\n  constructor(moviesAmount) {\n    super();\n\n    this._moviesAmount = moviesAmount;\n  }\n\n  getTemplate() {\n    return createFooterStatsTemplate(this._moviesAmount);\n  }\n}\n"],"sourceRoot":""}